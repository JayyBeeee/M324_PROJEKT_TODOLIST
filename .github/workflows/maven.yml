# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

# Push und Pull-Request-Events die auf den main Branch gehen als Auslösern.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Alle Aktionen die ausgeführt werden
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

# Tests im Backend-Verzeichnis werden asugeführt
    - name: Test
      run: mvn -f backend/ --batch-mode -Dmaven.test.failure.ignore=true test

# Kompiliert das Projekt und erstellt ein JAR-Artefakt und staging Verzeichnis
    - name: Build with Maven
      run: mvn -B package --file backend/pom.xml && mkdir staging && cp backend/target/*.jar staging

# Lädt das JAR-Artefakt als Package hoch
    - uses: actions/upload-artifact@v4
      with:
       name: Package
       path: staging

# Erstellt sowohl bei Erfolg als auch bei Fehlschlag Testbericht und formatiert ihn als JUnit-Testbericht 
    - name: Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Maven Tests
        path: backend/target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true

      

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
